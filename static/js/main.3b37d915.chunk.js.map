{"version":3,"sources":["store/cart-context.js","components/Cart/CartItem.js","components/Cart/Cart.js","assets/meals.jpg","components/Layout/Header.js","components/Meals/Meal.js","components/UI/Card.js","components/Meals/MealList.js","components/Meals/MealsSummary.js","store/CartProvider.js","App.js","index.js"],"names":["CartContext","React","createContext","meals","totalAmount","addMeal","meal","removeMeal","clearCart","CartItem","cartItem","onAdd","onRemove","price","toFixed","Container","className","Row","Col","sm","name","type","quantity","onClick","isEmpty","value","trim","Cart","showModal","onClickHandler","cartCtx","useContext","useState","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","httpError","setHttpError","street","city","postalCode","formInputValidity","setFormInputValidity","nameInputRef","useRef","streetInputRef","postalCodeInputRef","cityInputRef","hasItems","length","cartItemRemoveHandler","id","cartItemAddHandler","item","submitOrderHandler","userData","a","fetch","method","body","JSON","stringify","user","orderedMeals","ok","Error","message","list","map","bind","checkoutForm","Form","Group","controlId","Label","Control","ref","e","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","modalActions","cartModalContent","Modal","Header","closeButton","Title","Body","didSubmitModalContent","size","show","onHide","setShowModal","numberOfCartItems","reduce","curNumber","prevModal","Navbar","NavbarBrand","NavLink","src","mealsImage","alt","Meal","quantityInputRef","description","defaultValue","min","max","enteredQuantityNumber","Card","children","MealList","setMeals","isLoading","setIsLoading","useEffect","res","json","key","resData","mealsArr","push","fetchMeals","catch","error","style","fontFamily","textAlign","color","ListGroup","MealsSummary","defaultCartState","cartReducer","state","action","updatedMeals","updatedTotalAmount","existingCartMealIndex","findIndex","existingCartMeal","updatedMeal","concat","existingItem","filter","CartProvider","useReducer","cartState","dispatchCartAction","cardContext","Provider","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gYAWeA,EATKC,IAAMC,cAAc,CAEtCC,MAAO,GACPC,YAAa,EACbC,QAAS,SAACC,KACVC,WAAY,SAACD,KACbE,UAAW,e,uFC+BEC,EAnCE,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAE7BC,EAAK,WAAOH,EAASG,MAAMC,QAAQ,IAEzC,OACE,eAACC,EAAA,EAAD,CAAWC,UAAU,4BAArB,UACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAGH,UAAU,sBAAtB,UACE,mBAAGA,UAAU,iBAAb,SAA+BN,EAASU,OACxC,mBAAGJ,UAAU,aAAb,SAA2BH,OAE7B,cAACK,EAAA,EAAD,CAAKC,GAAI,EAAGH,UAAU,wBAAtB,SACE,qBAAKA,UAAU,qDAAf,SACE,+BACE,wBACEA,UAAU,sBACVK,KAAK,OAFP,oBAIOX,EAASY,kBAKtB,cAACJ,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,sBAAKH,UAAU,kDAAf,UACE,wBAAQA,UAAU,oBAAoBO,QAASZ,EAA/C,iBACA,wBAAQK,UAAU,oBAAoBO,QAASX,EAA/C,yBAIN,qBAAKI,UAAU,kBC5BfQ,G,MAAU,SAACC,GAAD,MAA4B,KAAjBA,EAAMC,SAgMlBC,EA7LF,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,eAEnBC,EAAUC,qBAAW/B,GAC3B,EAAoCgC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEA,EAAkDR,mBAAS,CACzDZ,MAAM,EACNqB,QAAQ,EACRC,MAAM,EACNC,YAAY,IAJd,mBAAOC,EAAP,KAA0BC,EAA1B,KAOMC,EAAeC,mBACfC,EAAiBD,mBACjBE,EAAqBF,mBACrBG,EAAeH,mBAEf3C,EAAW,gBAAO0B,EAAQ1B,YAAYU,QAAQ,IAC9CqC,EAAWrB,EAAQ3B,MAAMiD,OAAS,EAElCC,EAAwB,SAACC,GAC7BxB,EAAQvB,WAAW+C,IAGfC,EAAqB,SAACC,GAC1B1B,EAAQzB,QAAR,2BAAqBmD,GAArB,IAA2BlC,SAAU,MAOjCmC,EAAkB,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACzBvB,GAAgB,GADS,kBAGLwB,MAAM,sFAAuF,CAC7GC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,KAAMP,EACNQ,aAAcpC,EAAQ3B,UAPH,iBAWdgE,GAXc,uBAYrB7B,GAAa,GACP,IAAI8B,MAAM,yBAbK,QAgBrB9B,GAAa,GAhBQ,0DAmBvBE,EAAa,KAAM6B,SAnBI,QAqBzBjC,GAAgB,GAChBN,EAAQtB,YAtBiB,0DAAH,sDAsElB8D,EAAOxC,EAAQ3B,MAAMoE,KAAI,SAACf,GAAD,OAC7B,cAAC,EAAD,CAEE9C,SAAU8C,EACV7C,MAAO4C,EAAmBiB,KAAK,KAAMhB,GACrC5C,SAAUyC,EAAsBmB,KAAK,KAAMhB,EAAKF,KAH3CE,EAAKF,OAORmB,EACJ,eAACC,EAAA,EAAD,CAAM1D,UAAU,aAAhB,UACE,eAAC0D,EAAA,EAAKC,MAAN,CAAY3D,UAAU,OAAO4D,UAAU,4BAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,CAAczD,KAAK,OAAO0D,IAAKjC,KAC7BF,EAAkBxB,MAAQ,mBAAGJ,UAAU,aAAb,sCAE9B,eAAC0D,EAAA,EAAKC,MAAN,CAAY3D,UAAU,OAAO4D,UAAU,4BAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,qBACA,cAACH,EAAA,EAAKI,QAAN,CAAczD,KAAK,OAAO0D,IAAK/B,KAC7BJ,EAAkBH,QAAU,mBAAGzB,UAAU,aAAb,wCAEhC,eAAC0D,EAAA,EAAKC,MAAN,CAAY3D,UAAU,OAAO4D,UAAU,4BAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,CAAczD,KAAK,OAAO0D,IAAK9B,KAC7BL,EAAkBD,YAAc,mBAAG3B,UAAU,aAAb,4CAEpC,eAAC0D,EAAA,EAAKC,MAAN,CAAY3D,UAAU,OAAO4D,UAAU,4BAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CAAczD,KAAK,OAAO0D,IAAK7B,KAC7BN,EAAkBF,MAAQ,mBAAG1B,UAAU,aAAb,qCAE9B,eAACD,EAAA,EAAD,CAAWC,UAAU,0CAArB,UACE,wBAAQO,QAASM,EAAgBb,UAAU,QAA3C,oBACCmC,GAAY,wBAAQ9B,KAAK,SAASL,UAAU,QAAQO,QA9EnC,SAACyD,GACvBA,EAAEC,iBACF,IAAMC,EAAcpC,EAAaqC,QAAQ1D,MACnC2D,EAAgBpC,EAAemC,QAAQ1D,MACvC4D,EAAoBpC,EAAmBkC,QAAQ1D,MAC/C6D,EAAcpC,EAAaiC,QAAQ1D,MAEnC8D,GAAsB/D,EAAQ0D,GAC9BM,GAAwBhE,EAAQ4D,GAChCK,GAAsBjE,EAAQ8D,GAC9BI,EAxEqD,IAwEhBL,EAxEF3D,OAAO0B,QA0EhDP,EAAqB,CACnBzB,KAAMmE,EACN9C,OAAQ+C,EACR9C,KAAM+C,EACN9C,WAAY+C,IAIZH,GACAC,GACAC,GACAC,KAMEnD,GAWJkB,EAPiB,CACfrC,KAAM8D,EACNzC,OAAQ2C,EACR1C,KAAM4C,EACN3C,WAAY0C,MAyCG,wBAEd9C,GAAa,mBAAGvB,UAAU,aAAb,SAA2BuB,OAIvCoD,EACJ,eAAC5E,EAAA,EAAD,CAAWC,UAAU,0CAArB,UACE,wBAAQO,QAASM,EAAgBb,UAAU,QAA3C,SAAqDiB,EAAuB,SAAV,UACjEkB,GAAY,wBAAQnC,UAAU,QAAQO,QApHtB,WACnBW,GAAc,IAmHC,sBAIX0D,EACJ,eAAC,WAAD,WACE,cAACC,EAAA,EAAMC,OAAP,CAAcC,aAAW,EAAC/E,UAAU,0BAApC,SACE,cAAC6E,EAAA,EAAMG,MAAP,CAAahF,UAAU,cAAvB,4BAEF,eAAC6E,EAAA,EAAMI,KAAP,CAAYjF,UAAU,aAAtB,UACE,cAACD,EAAA,EAAD,CAAWC,UAAU,aAArB,SAAmCsD,IACnC,eAACvD,EAAA,EAAD,CAAWC,UAAU,mDAArB,UACE,8BAAM,kBACN,8BAAMZ,OAEP6B,GAAcwC,GACbxC,GAAc0D,QAKhBO,EACJ,cAACL,EAAA,EAAMI,KAAP,UACE,qBAAKjF,UAAU,iEAAf,SACE,iEAKN,OACE,eAAC6E,EAAA,EAAD,CACE7E,UAAU,QACVmF,KAAK,KACLC,KAAMxE,EACNyE,OAAQxE,EAJV,WAMIM,IAAiBE,GAAauD,EAC/BvD,GAAa6D,MCjML,MAA0B,kCC4C1BJ,G,MApCA,WAEb,MAAkC9D,oBAAS,GAA3C,mBAAOJ,EAAP,KAAkB0E,EAAlB,KAIMC,EAFUxE,qBAAW/B,GAEOG,MAAMqG,QAAO,SAACC,EAAWnG,GACzD,OAAOmG,EAAYnG,EAAKgB,WACvB,GAEGO,EAAiB,WACrByE,GAAa,SAAAI,GAAS,OAAKA,MAG7B,OACE,eAAC,WAAD,WACG9E,GAAa,cAAC,EAAD,CAAMA,UAAWA,EAAWC,eAAgBA,IAC1D,cAAC8E,EAAA,EAAD,CAAQ3F,UAAU,SAAlB,SACE,eAACD,EAAA,EAAD,CAAWC,UAAU,mBAArB,UACE,oBAAIA,UAAU,gBAAd,wBACA,cAAC4F,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAS7F,UAAU,cAAcO,QAASM,EAA1C,UACE,cAAC,IAAD,CAAeb,UAAU,mBAAmBmF,KAAM,KAClD,oBAAInF,UAAU,mBAAd,uBACA,oBAAIA,UAAU,uBAAd,SAAsCuF,cAK9C,qBAAKvF,UAAU,eAAf,SACE,qBAAK8F,IAAKC,EAAYC,IAAI,iBCiBnBC,G,MAlDF,SAAC,GAAc,IAAZ3G,EAAW,EAAXA,KAER4G,EAAmBnE,mBACnBjB,EAAUC,qBAAW/B,GAcrBa,EAAK,WAAOP,EAAKO,MAAMC,QAAQ,IAErC,OACE,eAACC,EAAA,EAAD,CAAWC,UAAU,4BAArB,UACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKF,UAAU,kBAAf,UACE,mBAAGA,UAAU,YAAb,SAA0BV,EAAKc,OAC/B,oBAAIJ,UAAU,mBAAd,SAAkCV,EAAK6G,cACvC,mBAAGnG,UAAU,aAAb,SAA2BH,OAE7B,eAACK,EAAA,EAAD,CAAKF,UAAU,mBAAf,UACE,sBAAKA,UAAU,qDAAf,UACE,sBAAMA,UAAU,cAAhB,sBACA,uBACE+D,IAAKmC,EACLlG,UAAU,aACVK,KAAK,SACL+F,aAAa,IACbC,IAAI,IACJC,IAAI,UAIR,qBAAKtG,UAAU,6BAAf,SACE,wBAAQA,UAAU,kBAAkBO,QApCvB,WACrB,IACMgG,GADkBL,EAAiB/B,QAAQ1D,MAGjDK,EAAQzB,QAAQ,CACdiD,GAAIhD,EAAKgD,GACTlC,KAAMd,EAAKc,KACXP,MAAOP,EAAKO,MACZS,SAAUiG,KA4BJ,2BAIN,qBAAKvG,UAAU,mBCvCNwG,G,MARF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OACE,qBAAKzG,UAAU,OAAf,SACGyG,M,QC+DQC,EAhEE,WAEf,MAA0B1F,mBAAS,IAAnC,mBAAO7B,EAAP,KAAcwH,EAAd,KACA,EAAkC3F,oBAAS,GAA3C,mBAAO4F,EAAP,KAAkBC,EAAlB,KACA,EAAkC7F,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAmCA,GAjCAsF,qBAAU,YACQ,uCAAG,kCAAAnE,EAAA,sEACCC,MAAM,sFADP,WACXmE,EADW,QAGR5D,GAHQ,sBAIT,IAAIC,MAAM,yBAJD,uBAOK2D,EAAIC,OAPT,OAWjB,IAAWC,KAJLC,EAPW,OASXC,EAAW,GAECD,EAChBC,EAASC,KAAK,CACZ9E,GAAI2E,EACJ7G,KAAM8G,EAAQD,GAAK7G,KACnB+F,YAAae,EAAQD,GAAKd,YAC1BtG,MAAOqH,EAAQD,GAAKpH,QAGxB8G,EAASQ,GACTN,GAAa,GApBI,4CAAH,qDAuBhBQ,GAAaC,OAAM,SAAAC,GACjBV,GAAa,GACbrF,EAAa+F,EAAMlE,cAKpB,IAECuD,EACF,OACE,oBAAIY,MAAO,CAAEC,WAAY,eAAgBC,UAAW,UAApD,wBAIJ,GAAInG,EACF,OACE,oBAAIiG,MAAO,CAAEC,WAAY,eAAgBC,UAAW,SAAUC,MAAO,OAArE,SAA+EpG,IAInF,IAAM+B,EAAOnE,EAAMoE,KAAI,SAACjE,GAAD,OACrB,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKgD,OAGlB,OACE,cAAC,EAAD,UACE,cAACsF,EAAA,EAAD,UACGtE,OC7CMuE,G,MAhBM,WACnB,OACE,0BAAS7H,UAAU,UAAnB,UACE,kEACA,qJAIA,8I,QCPA8H,EAAmB,CACvB3I,MAAO,GACPC,YAAa,GAGT2I,EAAc,SAACC,EAAOC,GAC1B,GAAoB,aAAhBA,EAAO5H,KAAqB,CAC9B,IAMI6H,EANEC,EAAqBH,EAAM5I,YAAc6I,EAAO3I,KAAKO,MAAQoI,EAAO3I,KAAKgB,SAEzE8H,EAAwBJ,EAAM7I,MAAMkJ,WACxC,SAAC/I,GAAD,OAAUA,EAAKgD,KAAO2F,EAAO3I,KAAKgD,MAE9BgG,EAAmBN,EAAM7I,MAAMiJ,GAGrC,GAAIE,EAAkB,CACpB,IAAMC,EAAW,2BACZD,GADY,IAEfhI,SAAUgI,EAAiBhI,SAAW2H,EAAO3I,KAAKgB,YAEpD4H,EAAY,YAAOF,EAAM7I,QACZiJ,GAAyBG,OAEtCL,EAAeF,EAAM7I,MAAMqJ,OAAOP,EAAO3I,MAG3C,MAAO,CACLH,MAAO+I,EACP9I,YAAa+I,GAIjB,GAAoB,gBAAhBF,EAAO5H,KAAwB,CACjC,IAMI6H,EANEE,EAAwBJ,EAAM7I,MAAMkJ,WACxC,SAAC/I,GAAD,OAAUA,EAAKgD,KAAO2F,EAAO3F,MAGzBmG,EAAeT,EAAM7I,MAAMiJ,GAC3BD,EAAqBH,EAAM5I,YAAcqJ,EAAa5I,MAE5D,GAA8B,IAA1B4I,EAAanI,SACf4H,EAAeF,EAAM7I,MAAMuJ,QAAO,SAAAlG,GAAI,OAAIA,EAAKF,KAAO2F,EAAO3F,UACxD,CACL,IAAMiG,EAAW,2BAAQE,GAAR,IAAsBnI,SAAUmI,EAAanI,SAAW,KACzE4H,EAAY,YAAOF,EAAM7I,QACZiJ,GAAyBG,EAGxC,MAAO,CACLpJ,MAAO+I,EACP9I,YAAa+I,GAKjB,OAAIF,EAAO5H,KACFyH,GAoCIa,EA/BM,SAAC,GAAkB,IAAhBlC,EAAe,EAAfA,SAEtB,EAAwCmC,qBAAWb,EAAaD,GAAhE,mBAAOe,EAAP,KAAkBC,EAAlB,KAcMC,EAAc,CAClB5J,MAAO0J,EAAU1J,MACjBC,YAAayJ,EAAUzJ,YACvBC,QAfqB,SAAAC,GACrBwJ,EAAmB,CAAEzI,KAAM,WAAYf,KAAMA,KAe7CC,WAZwB,SAAA+C,GACxBwG,EAAmB,CAAEzI,KAAM,cAAeiC,GAAIA,KAY9C9C,UATuB,WACvBsJ,EAAmB,CAAEzI,KAAM,iBAW7B,OACE,cAAC,EAAY2I,SAAb,CAAsBvI,MAAOsI,EAA7B,SACGtC,KCtEQwC,G,MAbH,WAEV,MAAwCjI,mBAAS,IAAjD,6BAEA,OACE,eAAC,EAAD,CAAchB,UAAU,MAAxB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,SCTNkJ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3b37d915.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CartContext = React.createContext({\r\n  // for autocompletion purpose\r\n  meals: [],\r\n  totalAmount: 0,\r\n  addMeal: (meal) => {},\r\n  removeMeal: (meal) => {},\r\n  clearCart: () => {}\r\n});\r\n\r\nexport default CartContext;","import React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport './CartItem.css';\r\n\r\nconst CartItem = ({ cartItem, onAdd, onRemove }) => {\r\n\r\n  const price = `$${cartItem.price.toFixed(2)}`;\r\n\r\n  return (\r\n    <Container className=\"meal-container d-flex-row\">\r\n      <Row>\r\n        <Col sm={2} className=\"cart-group-left-col\">\r\n          <p className=\"cart-meal-name\">{cartItem.name}</p>\r\n          <p className=\"meal-price\">{price}</p>\r\n        </Col>\r\n        <Col sm={1} className=\"cart-group-middle-col\">\r\n          <div className=\"mt-3 d-flex justify-content-end align-items-center\">\r\n            <span>\r\n              <button\r\n                className=\"cart-quantity-value\"\r\n                type=\"text\"\r\n              >\r\n                {`x${cartItem.quantity}`}\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </Col>\r\n        <Col sm={9}>\r\n          <div className=\"cart-group-right-col d-flex justify-content-end\">\r\n            <button className=\"cart-button-group\" onClick={onAdd}> + </button>\r\n            <button className=\"cart-button-group\" onClick={onRemove}> - </button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <div className=\"cart-line\"></div>\r\n    </Container>\r\n  )\r\n};\r\n\r\nexport default CartItem;","import React, { Fragment, useState, useContext, useRef } from 'react';\r\nimport { Modal, Container, Form } from 'react-bootstrap';\r\nimport CartItem from './CartItem';\r\nimport CartContext from '../../store/cart-context';\r\nimport './Cart.css';\r\n\r\nconst isEmpty = (value) => value.trim() === '';\r\nconst isFiveNum = (postalCode) => postalCode.trim().length === 5;\r\n\r\nconst Cart = ({ showModal, onClickHandler }) => {\r\n\r\n  const cartCtx = useContext(CartContext);\r\n  const [isCheckout, setIsCheckout] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [didSubmit, setDidSubmit] = useState(false);\r\n  const [httpError, setHttpError] = useState(null);\r\n\r\n  const [formInputValidity, setFormInputValidity] = useState({\r\n    name: true,\r\n    street: true,\r\n    city: true,\r\n    postalCode: true\r\n  });\r\n\r\n  const nameInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const postalCodeInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n\r\n  const totalAmount = `€${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.meals.length > 0;\r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.removeMeal(id);\r\n  };\r\n\r\n  const cartItemAddHandler = (item) => {\r\n    cartCtx.addMeal({ ...item, quantity: 1 })\r\n  };\r\n\r\n  const orderHandler = () => {\r\n    setIsCheckout(true);\r\n  }\r\n\r\n  const submitOrderHandler = async (userData) => {\r\n    setIsSubmitting(true);\r\n    try {\r\n      const res = await fetch(\"https://food-order-84b3e-default-rtdb.europe-west1.firebasedatabase.app/orders.json\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          user: userData,\r\n          orderedMeals: cartCtx.meals\r\n        })\r\n      });\r\n\r\n      if (!res.ok) {\r\n        setDidSubmit(false);\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      else {\r\n        setDidSubmit(true);\r\n      }\r\n    } catch (error) {\r\n      setHttpError(error.message);\r\n    }\r\n    setIsSubmitting(false);\r\n    cartCtx.clearCart();\r\n  }\r\n\r\n  const checkoutHandler = (e) => {\r\n    e.preventDefault();\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredStreet = streetInputRef.current.value;\r\n    const enteredPostalCode = postalCodeInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredPostalCodeIsValid = isFiveNum(enteredPostalCode);\r\n\r\n    setFormInputValidity({\r\n      name: enteredNameIsValid,\r\n      street: enteredStreetIsValid,\r\n      city: enteredCityIsValid,\r\n      postalCode: enteredPostalCodeIsValid\r\n    })\r\n\r\n    const formIsValid =\r\n      enteredNameIsValid &&\r\n      enteredStreetIsValid &&\r\n      enteredCityIsValid &&\r\n      enteredPostalCodeIsValid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    if (httpError) {\r\n      return;\r\n    }\r\n\r\n    const userData = {\r\n      name: enteredName,\r\n      street: enteredStreet,\r\n      city: enteredCity,\r\n      postalCode: enteredPostalCode\r\n    };\r\n\r\n    submitOrderHandler(userData);\r\n\r\n  };\r\n\r\n\r\n  const list = cartCtx.meals.map((item) => (\r\n    <CartItem\r\n      key={item.id}\r\n      cartItem={item}\r\n      onAdd={cartItemAddHandler.bind(null, item)}\r\n      onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n    />\r\n  ));\r\n\r\n  const checkoutForm = (\r\n    <Form className=\"d-flex-row\">\r\n      <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n        <Form.Label>Your Name</Form.Label>\r\n        <Form.Control type=\"text\" ref={nameInputRef} />\r\n        {!formInputValidity.name && <p className=\"error mt-2\">Name cannot be empty!</p>}\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n        <Form.Label>Street</Form.Label>\r\n        <Form.Control type=\"text\" ref={streetInputRef} />\r\n        {!formInputValidity.street && <p className=\"error mt-2\">Street cannot be empty!</p>}\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n        <Form.Label>Post Code</Form.Label>\r\n        <Form.Control type=\"text\" ref={postalCodeInputRef} />\r\n        {!formInputValidity.postalCode && <p className=\"error mt-2\">Postal code must be 5 digit</p>}\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-5\" controlId=\"exampleForm.ControlInput1\">\r\n        <Form.Label>City</Form.Label>\r\n        <Form.Control type=\"text\" ref={cityInputRef} />\r\n        {!formInputValidity.city && <p className=\"error mt-2\">City cannot be empty</p>}\r\n      </Form.Group>\r\n      <Container className=\"cart-buttons d-flex justify-content-end\">\r\n        <button onClick={onClickHandler} className=\"close\">Cancel</button>\r\n        {hasItems && <button type=\"submit\" className=\"order\" onClick={checkoutHandler}>Confirm</button>}\r\n      </Container>\r\n      {httpError && <p className=\"http-error\">{httpError}</p>}\r\n    </Form>\r\n  )\r\n\r\n  const modalActions = (\r\n    <Container className=\"cart-buttons d-flex justify-content-end\">\r\n      <button onClick={onClickHandler} className=\"close\">{!isCheckout ? \"Close\" : \"Cancel\"}</button>\r\n      {hasItems && <button className=\"order\" onClick={orderHandler}>Order</button>}\r\n    </Container>\r\n  )\r\n\r\n  const cartModalContent = (\r\n    <Fragment>\r\n      <Modal.Header closeButton className=\"d-flex-row modal-header\">\r\n        <Modal.Title className=\"modal-title\">Cart Summary</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"modal-body\">\r\n        <Container className=\"modal-list\">{list}</Container>\r\n        <Container className=\"modal-total-price d-flex justify-content-between\">\r\n          <div>{\"Total Amount:\"}</div>\r\n          <div>{totalAmount}</div>\r\n        </Container>\r\n        {isCheckout && checkoutForm}\r\n        {!isCheckout && modalActions}\r\n      </Modal.Body>\r\n    </Fragment>\r\n  )\r\n\r\n  const didSubmitModalContent = (\r\n    <Modal.Body>\r\n      <div className=\"order-success d-flex justify-content-center align-items-center\">\r\n        <p>Successfully sent the order!</p>\r\n      </div>\r\n    </Modal.Body>\r\n  )\r\n\r\n  return (\r\n    <Modal\r\n      className=\"modal\"\r\n      size=\"lg\"\r\n      show={showModal}\r\n      onHide={onClickHandler}\r\n    >\r\n      {!isSubmitting && !didSubmit && cartModalContent}\r\n      {didSubmit && didSubmitModalContent}\r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default Cart;","export default __webpack_public_path__ + \"static/media/meals.2971f633.jpg\";","import React, { useState, Fragment, useContext } from 'react';\r\nimport { Container, Navbar, NavbarBrand, NavLink } from 'react-bootstrap';\r\nimport CartContext from '../../store/cart-context';\r\nimport { IoCartOutline } from 'react-icons/io5';\r\nimport Cart from '../Cart/Cart';\r\nimport mealsImage from '../../assets/meals.jpg';\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  const numberOfCartItems = cartCtx.meals.reduce((curNumber, meal) => {\r\n    return curNumber + meal.quantity;\r\n  }, 0); \r\n\r\n  const onClickHandler = () => {\r\n    setShowModal(prevModal => !prevModal);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {showModal && <Cart showModal={showModal} onClickHandler={onClickHandler} />}\r\n      <Navbar className=\"header\">\r\n        <Container className=\"header-container\">\r\n          <h1 className=\"header-header\">ReactMeals</h1>\r\n          <NavbarBrand>\r\n            <NavLink className=\"header-link\" onClick={onClickHandler}>\r\n              <IoCartOutline className=\"header-cart-logo\" size={50} />\r\n              <h4 className=\"header-cart-text\">Your Cart</h4>\r\n              <h4 className=\"header-cart-quantity\">{numberOfCartItems}</h4>\r\n            </NavLink>\r\n          </NavbarBrand>\r\n        </Container>\r\n      </Navbar>\r\n      <div className=\"header-image\">\r\n        <img src={mealsImage} alt=\"meals\" />\r\n      </div>\r\n    </Fragment>\r\n  )\r\n};\r\n\r\nexport default Header;","import React, { useRef, useContext } from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport CartContext from '../../store/cart-context';\r\nimport './Meal.css';\r\n\r\nconst Meal = ({ meal }) => {\r\n\r\n  const quantityInputRef = useRef();\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  const onClickHandler = () => {\r\n    const enteredQuantity = quantityInputRef.current.value;  // returns string no matter what\r\n    const enteredQuantityNumber = +enteredQuantity; // convert to a number\r\n\r\n    cartCtx.addMeal({\r\n      id: meal.id,\r\n      name: meal.name,\r\n      price: meal.price,\r\n      quantity: enteredQuantityNumber\r\n    });\r\n  };\r\n\r\n  const price = `$${meal.price.toFixed(2)}`;\r\n\r\n  return (\r\n    <Container className=\"meal-container d-flex-row\">\r\n      <Row>\r\n        <Col className=\"meal-group-left\">\r\n          <p className=\"meal-name\">{meal.name}</p>\r\n          <em className=\"meal-description\">{meal.description}</em>\r\n          <p className=\"meal-price\">{price}</p>\r\n        </Col>\r\n        <Col className=\"meal-group-right\">\r\n          <div className=\"mt-3 d-flex justify-content-end align-items-center\">\r\n            <span className=\"meal-amount\">Quantity</span>\r\n            <input\r\n              ref={quantityInputRef}\r\n              className=\"meal-input\"\r\n              type=\"number\"\r\n              defaultValue=\"1\"\r\n              min=\"1\"\r\n              max=\"10\"\r\n            >\r\n            </input>\r\n          </div>\r\n          <div className=\"d-flex justify-content-end\">\r\n            <button className=\"meal-add-button\" onClick={onClickHandler}>+ Add</button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <div className=\"meal-line\"></div>\r\n    </Container>\r\n  )\r\n};\r\n\r\nexport default Meal;","import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = ({ children }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React, { useState, useEffect } from 'react';\r\nimport Meal from './Meal';\r\nimport Card from '../UI/Card';\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nconst MealList = () => {\r\n\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [httpError, setHttpError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMeals = async () => {\r\n      const res = await fetch(\"https://food-order-84b3e-default-rtdb.europe-west1.firebasedatabase.app/meals.json\");\r\n\r\n      if (!res.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      const resData = await res.json();\r\n\r\n      const mealsArr = [];\r\n\r\n      for (const key in resData) {\r\n        mealsArr.push({\r\n          id: key,\r\n          name: resData[key].name,\r\n          description: resData[key].description,\r\n          price: resData[key].price\r\n        });\r\n      }\r\n      setMeals(mealsArr);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchMeals().catch(error => {\r\n      setIsLoading(false);\r\n      setHttpError(error.message);\r\n    });\r\n\r\n\r\n\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <h2 style={{ fontFamily: 'Merienda One', textAlign: 'center' }}>Loading...</h2>\r\n    );\r\n  }\r\n\r\n  if (httpError) {\r\n    return (\r\n      <h2 style={{ fontFamily: 'Merienda One', textAlign: 'center', color: 'red' }}>{httpError}</h2>\r\n    );\r\n  }\r\n\r\n  const list = meals.map((meal) => (\r\n    <Meal key={meal.id} meal={meal} />\r\n  ))\r\n\r\n  return (\r\n    <Card>\r\n      <ListGroup>\r\n        {list}\r\n      </ListGroup>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MealList;","import './MealsSummary.css';\n\nconst MealsSummary = () => {\n  return (\n    <section className=\"summary\">\n      <h2>Delicious Food, Delivered To You</h2>\n      <p>\n        Choose your favorite meal from our broad selection of available meals\n        and enjoy a delicious lunch or dinner at home.\n      </p>\n      <p>\n        All our meals are cooked with high-quality ingredients, just-in-time and\n        of course by experienced chefs!\n      </p>\n    </section>\n  );\n};\n\nexport default MealsSummary;\n","import React, { useReducer } from 'react';\r\nimport CartContext from './cart-context';\r\n\r\nconst defaultCartState = {\r\n  meals: [],\r\n  totalAmount: 0\r\n}\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === 'ADD_MEAL') {\r\n    const updatedTotalAmount = state.totalAmount + action.meal.price * action.meal.quantity;\r\n\r\n    const existingCartMealIndex = state.meals.findIndex(\r\n      (meal) => meal.id === action.meal.id\r\n    );\r\n    const existingCartMeal = state.meals[existingCartMealIndex];\r\n    let updatedMeals;\r\n\r\n    if (existingCartMeal) {\r\n      const updatedMeal = {\r\n        ...existingCartMeal,\r\n        quantity: existingCartMeal.quantity + action.meal.quantity\r\n      };\r\n      updatedMeals = [...state.meals];\r\n      updatedMeals[existingCartMealIndex] = updatedMeal;\r\n    } else {\r\n      updatedMeals = state.meals.concat(action.meal);\r\n    }\r\n\r\n    return {\r\n      meals: updatedMeals,\r\n      totalAmount: updatedTotalAmount\r\n    };\r\n  }\r\n\r\n  if (action.type === 'REMOVE_MEAL') {\r\n    const existingCartMealIndex = state.meals.findIndex(\r\n      (meal) => meal.id === action.id\r\n    );\r\n\r\n    const existingItem = state.meals[existingCartMealIndex];\r\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n    let updatedMeals;\r\n    if (existingItem.quantity === 1) {\r\n      updatedMeals = state.meals.filter(item => item.id !== action.id);\r\n    } else {\r\n      const updatedMeal = { ...existingItem, quantity: existingItem.quantity - 1 };\r\n      updatedMeals = [...state.meals];\r\n      updatedMeals[existingCartMealIndex] = updatedMeal;\r\n    }\r\n\r\n    return {\r\n      meals: updatedMeals,\r\n      totalAmount: updatedTotalAmount\r\n    }\r\n\r\n  }\r\n\r\n  if (action.type === 'CLEAR_CART') {\r\n    return defaultCartState;\r\n  }\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = ({ children }) => {\r\n\r\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n  const addMealHandler = meal => {\r\n    dispatchCartAction({ type: 'ADD_MEAL', meal: meal });\r\n  };\r\n\r\n  const removeMealHandler = id => {\r\n    dispatchCartAction({ type: 'REMOVE_MEAL', id: id });\r\n  };\r\n\r\n  const clearCartHandler = () => {\r\n    dispatchCartAction({ type: 'CLEAR_CART' });\r\n  };\r\n\r\n  const cardContext = {\r\n    meals: cartState.meals,\r\n    totalAmount: cartState.totalAmount,\r\n    addMeal: addMealHandler,\r\n    removeMeal: removeMealHandler,\r\n    clearCart: clearCartHandler\r\n  }\r\n\r\n  return (\r\n    <CartContext.Provider value={cardContext}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  )\r\n};\r\n\r\nexport default CartProvider;","import React, { useState } from 'react';\nimport Header from './components/Layout/Header';\nimport MealList from './components/Meals/MealList';\nimport MealsSummary from './components/Meals/MealsSummary';\nimport CartProvider from './store/CartProvider';\nimport './App.css';\n\nconst App = () => {\n\n  const [shoppingCart, setShoppingCart] = useState([]);\n\n  return (\n    <CartProvider className=\"App\">\n      <Header />\n      <MealsSummary />\n      <MealList />\n    </CartProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}